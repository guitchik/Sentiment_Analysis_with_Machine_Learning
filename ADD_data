{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "dd2319b3-dca6-4c8f-9c8c-4053e7ead0ed",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "from dotenv import load_dotenv\n",
    "import alpaca_trade_api as tradeapi\n",
    "import os\n",
    "import requests"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "a166500e-93d8-4ed6-b9a2-91de33f363f8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "load_dotenv()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "1358663a-7cfa-440e-8972-1faef1d7c3a1",
   "metadata": {},
   "outputs": [],
   "source": [
    "alpaca_api_key = os.getenv(\"ALPACA_API_KEY\")\n",
    "alpaca_secret_key = os.getenv(\"ALPACA_SECRET_KEY\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "c18a4f05-5770-4cf1-add3-d3b960a4b11b",
   "metadata": {},
   "outputs": [],
   "source": [
    "alpaca = tradeapi.REST(\n",
    "    alpaca_api_key,\n",
    "    alpaca_secret_key,\n",
    "    api_version=\"v2\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "1f18ae3e-e65c-40da-a79f-9721ff9e8171",
   "metadata": {},
   "outputs": [],
   "source": [
    "ticker = 'ADD'\n",
    "start_date = pd.Timestamp(\"2023-04-06\", tz=\"America/New_York\").isoformat()\n",
    "end_date = pd.Timestamp(\"2023-04-12\", tz=\"America/New_York\").isoformat()\n",
    "timeframe = \"1Day\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "721d0f84-3a8a-4cd6-bb6c-20dd7426c44c",
   "metadata": {},
   "outputs": [],
   "source": [
    "ADD_df = alpaca.get_bars(\n",
    "    ticker,\n",
    "    timeframe,\n",
    "    start = start_date,\n",
    "    end = end_date\n",
    ").df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "4149ec2c-c6ae-40f1-9e3b-54929db90067",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>open</th>\n",
       "      <th>high</th>\n",
       "      <th>low</th>\n",
       "      <th>close</th>\n",
       "      <th>volume</th>\n",
       "      <th>trade_count</th>\n",
       "      <th>vwap</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>timestamp</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2023-04-06 04:00:00+00:00</th>\n",
       "      <td>1.85</td>\n",
       "      <td>1.8785</td>\n",
       "      <td>1.81</td>\n",
       "      <td>1.8600</td>\n",
       "      <td>62023</td>\n",
       "      <td>242</td>\n",
       "      <td>1.846430</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-04-10 04:00:00+00:00</th>\n",
       "      <td>1.83</td>\n",
       "      <td>2.0000</td>\n",
       "      <td>1.83</td>\n",
       "      <td>1.9343</td>\n",
       "      <td>67084</td>\n",
       "      <td>468</td>\n",
       "      <td>1.928132</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-04-11 04:00:00+00:00</th>\n",
       "      <td>1.98</td>\n",
       "      <td>2.0000</td>\n",
       "      <td>1.91</td>\n",
       "      <td>1.9900</td>\n",
       "      <td>42481</td>\n",
       "      <td>263</td>\n",
       "      <td>1.967191</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-04-12 04:00:00+00:00</th>\n",
       "      <td>2.04</td>\n",
       "      <td>2.0800</td>\n",
       "      <td>1.92</td>\n",
       "      <td>1.9300</td>\n",
       "      <td>76748</td>\n",
       "      <td>430</td>\n",
       "      <td>2.000411</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                           open    high   low   close  volume  trade_count  \\\n",
       "timestamp                                                                    \n",
       "2023-04-06 04:00:00+00:00  1.85  1.8785  1.81  1.8600   62023          242   \n",
       "2023-04-10 04:00:00+00:00  1.83  2.0000  1.83  1.9343   67084          468   \n",
       "2023-04-11 04:00:00+00:00  1.98  2.0000  1.91  1.9900   42481          263   \n",
       "2023-04-12 04:00:00+00:00  2.04  2.0800  1.92  1.9300   76748          430   \n",
       "\n",
       "                               vwap  \n",
       "timestamp                            \n",
       "2023-04-06 04:00:00+00:00  1.846430  \n",
       "2023-04-10 04:00:00+00:00  1.928132  \n",
       "2023-04-11 04:00:00+00:00  1.967191  \n",
       "2023-04-12 04:00:00+00:00  2.000411  "
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ADD_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "75cacb1d-d3ba-42ea-b6ec-c06f64bc1398",
   "metadata": {},
   "outputs": [],
   "source": [
    "ADD_df = ADD_df.drop(columns = ['trade_count','vwap'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "57b55360-3dba-47fe-8b66-5bc8d9cc1383",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>open</th>\n",
       "      <th>high</th>\n",
       "      <th>low</th>\n",
       "      <th>close</th>\n",
       "      <th>volume</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>timestamp</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2023-04-06 04:00:00+00:00</th>\n",
       "      <td>1.85</td>\n",
       "      <td>1.8785</td>\n",
       "      <td>1.81</td>\n",
       "      <td>1.8600</td>\n",
       "      <td>62023</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-04-10 04:00:00+00:00</th>\n",
       "      <td>1.83</td>\n",
       "      <td>2.0000</td>\n",
       "      <td>1.83</td>\n",
       "      <td>1.9343</td>\n",
       "      <td>67084</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-04-11 04:00:00+00:00</th>\n",
       "      <td>1.98</td>\n",
       "      <td>2.0000</td>\n",
       "      <td>1.91</td>\n",
       "      <td>1.9900</td>\n",
       "      <td>42481</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-04-12 04:00:00+00:00</th>\n",
       "      <td>2.04</td>\n",
       "      <td>2.0800</td>\n",
       "      <td>1.92</td>\n",
       "      <td>1.9300</td>\n",
       "      <td>76748</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                           open    high   low   close  volume\n",
       "timestamp                                                    \n",
       "2023-04-06 04:00:00+00:00  1.85  1.8785  1.81  1.8600   62023\n",
       "2023-04-10 04:00:00+00:00  1.83  2.0000  1.83  1.9343   67084\n",
       "2023-04-11 04:00:00+00:00  1.98  2.0000  1.91  1.9900   42481\n",
       "2023-04-12 04:00:00+00:00  2.04  2.0800  1.92  1.9300   76748"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ADD_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "08479392-609e-4a15-8183-13512c92eb29",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'/Users/taylorlittle/Documents/Bootcamp/Project_Two'"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "os.getcwd()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c11fde8f-b6f5-48c0-8966-55c77e5d952d",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
